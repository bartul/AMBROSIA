{
    "$schema": "http://json-schema.org/draft-04/schema",
    "type": "object",
    "description": "Runtime configuration settings for the 'ambrosia-node' package.",
    "required": ["instanceName", "icCraPort"],
    "properties": {
        "$schema" : {
            "type": "string",
            "description": "The location of the matching JSON schema file, which is required for IntelliSense and auto-completion when editing using VSCode/VS2019+."
        },
        "instanceName": {
            "type": "string",
            "description": "The name this Ambrosia Immortal instance will be referred to by all instances (including itself).",
            "default": "myInstance"
        },
        "icCraPort": {
            "type": "number",
            "description": "The port number that the Common Runtime for Applications (CRA) layer uses."
        },
        "icReceivePort": {
            "type": "number",
            "description": "The port number that the Immortal Coordinator (IC) receives on. If not provided, it will be read from the registration."
        },
        "icSendPort": {
            "type": "number",
            "description": "The port number that the Immortal Coordinator (IC) sends on. If not provided, it will be read from the registration."
        },
        "icLogFolder": {
            "type": "string",
            "description": "The folder where the Immortal Coordinator (IC) will persist its logs. If not provided, it will be read from the registration."
        },
        "icLogStorageType" : {
            "type": "string",
            "enum": [ "Files", "Blobs" ],
            "description": "The storage type that the Immortal Coordinator (IC) logs will be persisted in. Defaults to 'Files'",
            "default": "Files"
        },
        "icBinFolder": {
            "type": "string",
            "description": "The folder where the Immortal Coordinator (IC) binaries exist. If not specified, the 'AMBROSIATOOLS' environment variable will be used."
        },
        "icIPv4Address" : {
            "type": "string",
            "description": "An override IPv4 address for the Immortal Coordinator (IC) to use instead of the local IPv4 address."
        },
        "useNetCore": {
            "type": "boolean",
            "description": "Whether to use .NET Core (instead of .Net Framework) to run the Immortal Coordinator (IC) [this is Windows-only option]. Defaults to false.",
            "default": false
        },
        "debugStartCheckpoint": {
            "type": "number",
            "description": "The checkpoint number to start \"time-travel debugging\" from."
        },
        "debugTestUpgrade": {
            "type": "boolean",
            "description": "Whether to perform a test upgrade (for debugging/testing purposes). Defaults to false.",
            "default": false
        },
        "logTriggerSizeInMB": {
            "type": "number",
            "description": "The size (in MB) the log must reach before the IC will take a checkpoint and start a new log."
        },
        "isActiveActive": {
            "type": "boolean",
            "description": "Whether this [primary] instance will run in an active-active configuration. If specified, overrides the registered value."
        },
        "replicaNumber": {
            "type": "number",
            "description": "The replica (secondary) ID this instance will use in an active-active configuration. MUST match the value used when registering the replica with 'AddReplica'."
        },
        "appVersion": {
            "type": "number",
            "description": "The nominal version of this Immortal instance. Used to identify the log sub-folder name (ie. &lt;icInstanceName>_&lt;appVersion>) that will be logged to (or read from, if debugStartCheckpoint is specified)."
        },
        "secureNetworkAssemblyName" : {
            "type": "string",
            "description": "The name of the .NET assembly used to establish a secure network channel between ICs."
        },
        "secureNetworkClassName" : {
            "type": "string",
            "description": "The name of the .NET class (that implements ISecureStreamConnectionDescriptor) in 'secureNetworkAssemblyName'."
        },
        "lbOptions": {
            "type": "object",
            "description": "Options used to control the behavior of the language-binding.",
            "properties": {
                "deleteLogs": {
                    "type": "boolean",
                    "description": "Set this to true to clear the IC logs (all prior checkpoints and logged state changes will be permanently lost, and recovery will not run). Defaults to false.",
                    "default": false
                },
                "deleteRemoteCRAConnections": {
                    "type": "boolean",
                    "description": "[Debug] Set this to true to delete non-local CRA connections at startup. Defaults to false.",
                    "default": false
                },
                "allowCustomJSONSerialization": {
                    "type": "boolean",
                    "description": "Set this to false to disable the specialized JSON serialization of BigInt and typed-arrays (eg. Uint8Array). Defaults to true.",
                    "default": true
                },
                "typeCheckIncomingPostMethodParameters": {
                    "type": "boolean",
                    "description": "Set this to false to skip type-checking the parameters of incoming post methods for correctness against published methods/types. Defaults to true.",
                    "default": true
                },
                "outputLoggingLevel": {
                    "type": "string",
                    "enum": [ "Minimal", "Normal", "Verbose" ],
                    "default": "Normal",
                    "description": "The level of detail to include in the language-binding output log. Defaults to 'Normal'."
                },
                "outputLogDestination": {
                    "type": "string",
                    "enum": [ "Console", "File", "ConsoleAndFile" ],
                    "description": "Destination(s) where the language-binding will log output. Defaults to 'Console'. While logging to the console is useful during development/debugging, for production set it to 'File' (for performance).",
                    "default": "Console"
                },
                "outputLogFolder": {
                    "type": "string",
                    "description": "The folder where the language-binding will write output log files (when outputLogDestination is 'File' or 'ConsoleAndFile'). Defaults to './outputLogs'.",
                    "default": "./outputLogs"
                },
                "allowDisplayOfRpcParams": {
                    "type": "boolean",
                    "description": "Set this to true to allow incoming RPC parameters [which can contain privacy/security related content] to be displayed/logged. Defaults to false.",
                    "default": false
                },
                "allowPostMethodTimeouts": {
                    "type": "boolean",
                    "description": "Set this to false to disable the timeout feature of Post methods. Defaults to true.",
                    "default": true
                },
                "allowPostMethodErrorStacks": {
                    "type": "boolean",
                    "description": "Set this to true to enable sending a full stack trace in a Post method error result. Defaults to false.",
                    "default": false
                },
                "enableTypeScriptStackTraces": {
                    "type": "boolean",
                    "description": "Enables an Error stack trace to refer to TypeScript files/locations (when available) instead of JavaScript files/locations. Defaults to true.",
                    "default": true
                },
                "maxInFlightPostMethods": 
                {
                    "type": "number",
                    "description": "Set this to a positive integer to generate a warning whenever the number of in-flight post methods reaches this threshold. Defaults to -1 (no limit).",
                    "default": -1
                }
            }
        }
    }    
}